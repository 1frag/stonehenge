version: "3.3"

services:

  stonehenge_app: &app
    tty: true
    build:
      context: .
      args:
        requirements: requirements.txt
    container_name: stonehenge
    environment:
      - DEBUG=True
      - SETTINGS_FILE=api.dev.yml
      - PYTHONUNBUFFERED=1
    env_file:
      ./prod.env
    restart: always
    volumes:
      - .:/app
    depends_on:
      - postgres
    ports:
      - 8081:8000
    networks:
      stonetwork:
        aliases:
          - local.app.stonehenge

  postgres:
    image: postgres:11
    container_name: stonehenge_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432
    networks:
      stonetwork:
        aliases:
          - local.db.stonehenge

#  test:
#    <<: *app
#    container_name: stonehenge_test
#    ports:
#      - 8082:8082
#    entrypoint: py.test -v -p no:warnings
#    command: ''

  stonehenge_nginx:
    image: nginx:mainline-alpine
    container_name: "stonehenge_nginx"
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      stonetwork:
        aliases:
          - local.server.stonehenge

  redis:
    image: "redis:alpine"
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      stonetwork:
        aliases:
          - local.redis.stonehenge

networks:
  stonetwork:
